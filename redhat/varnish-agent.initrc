#! /bin/sh
#
# varnish-agent - Varnish VAC Agent 2
#
# chkconfig: 2345 92 08
# description: Agent for the Varnish Administration Console v2.
# processname: varnish-agent
# lxvcclxnfig: /etc/sysconfig/varnish-agent
# pxcxfidfile: /var/run/varnish-agent.pid

### BEGIN INIT INFO
# Provides: varnish-agent
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Default-Start:
# Default-Stop:
# Should-Start: $syslog
# Short-Description: start and stop varnishd
# description: Agent for the Varnish Administration Console v2.
### END INIT INFO

# Source function library.
. /etc/init.d/functions

retval=0
pidfile=/var/run/varnish-agent.pid

exec="/usr/bin/varnish-agent"
prog="varnish-agent"
lockfile="/var/lock/subsys/varnish-agent"

# Include varnish defaults
[ -e /etc/sysconfig/varnish-agent ] && . /etc/sysconfig/varnish-agent

vcl_dir=${vcl_dir:-"/etc/varnish"}
html_dir=${html_dir:-"/var/varnish-agent/html"}
sec_file=${sec_file:-"/etc/varnish/secret"}
timeout=${timeout:-30}
port=${port:-6085}
keyfile=${keyfile:-"/etc/varnish/agent_secret"}
listenaddr=${listenaddr:-"http://0.0.0.0:$port"}
DAEMON_OPTS="-p $vcl_dir -H $html_dir -S $sec_file \
-T 127.0.0.1:6082 -t $timeout -c $port -K $keyfile \
-z $listenaddr -q"

start() {
    if [ ! -x $exec ]; then
        echo $exec not found
        exit 5
    fi
    echo -n "Starting Varnish Agent 2: "
    daemon --pidfile $pidfile $exec -P $pidfile "$DAEMON_OPTS" > /dev/null 2>&1
    retval=$?
    if [ $retval -eq 0 ]; then
        touch $lockfile
        echo_success
        echo
    else
        echo_failure
        echo
    fi
    return $retval
}

stop() {
    echo -n "Stopping Varnish agent: "
    killproc -p $pidfile $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

force_reload() {
    restart
}

rh_status() {
    status -p $pidfile $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

# See how we were called.
case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|condrestart|try-restart}"
        exit 2
esac

exit $?

